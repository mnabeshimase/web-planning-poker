# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  name: String!
  roomId: ID!
}

type Vote {
  userId: ID!
  storyId: ID!
  score: String!
}

type Story {
  id: ID!
  roomId: ID!
  description: String!
  votes: [Vote!]
}

type Room {
  id: ID!
  phase: Phase!
  currentStoryId: ID
  users: [User!]
  stories: [Story!]
}

enum Phase {
  INIT
  VOTE
  DISCUSSION
}

type Query {
  room(id: ID!): Room!
  listStoriesByRoomId(id: ID!): [Story!]
  listVotesByStoryId(id: ID!): [Vote!]
}

type Mutation {
  createUser(roomId: ID, name: String!): User!
  deleteUser(id: ID!): User!
  updateRoom(updateRoomInput: UpdateRoomInput!): Room!
  createStory(roomId: ID!, description: String!): Story!
  upsertVote(upsertVoteInput: UpsertVoteInput!): Vote!
}

input UpdateRoomInput {
  id: ID!
  userIds: [ID!]
  phase: Phase
  currentStoryId: ID
}

input UpsertVoteInput {
  id: ID
  userId: ID!
  storyId: ID!
  score: String!
}

type Subscription {
  userCreated(roomId: ID!): User!
  userDeleted(roomId: ID!): User!
  roomUpdated(roomId: ID!): Room!
  storyCreated(roomId: ID!): Story!
  voteUpserted(roomId: ID!): Vote!
}
