type Query {
  listVotesByRoomId(id: ID!): [Vote]
}

type Mutation {
  upsertVote(upsertVoteInput: UpsertVoteInput!): Vote!
}

type Subscription {
  voteUpserted: Vote
}

type Vote {
  userId: ID!
  roomId: ID!
  score: String!
}

input UpsertVoteInput {
  userId: ID!
  roomId: ID!
  score: String!
}
